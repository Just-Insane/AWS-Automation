- name: Get EC2 Instance Facts
  ec2_instance_facts:
    filters:
      "tag:Name": webserver
      "instance-state-name": running
  register: ec2facts

- name: Snapshot Instance
  ec2_snapshot:
    instance_id: "{{ item.instance_id }}"
    device_name: /dev/xvda
    region: "{{ region }}"
    description: Snapshot of created webserver
    snapshot_tags:
      Name: webserver
      Software: nginx
  with_items: "{{ ec2facts.instances }}"

- name: Get Snapshot facts
  ec2_snapshot_facts:
    filters:
      "tag:Name": webserver
      "tag:Software": nginx
  register: snapshot

- name: Terminate instances after snapshot
  ec2:
    state: 'absent'
    region: "{{ region }}"
    instance_id: "{{ item.instance_id }}"
  with_items: "{{ ec2facts.instances }}"

- name: Create AMI Registration
  ec2_ami:
    name: autoscaling-AMI
    state: present
    architecture: x86_64
    virtualization_type: hvm
    root_device_name: /dev/xvda
    device_mapping:
      - device_name: /dev/xvda
        size: 8
        snapshot_id: "{{ item.snapshot_id }}"
        delete_on_termination: true
        volume_type: gp2
  with_items: "{{ snapshot.snapshots }}"
  register: image

- local_action:
    module: ec2_elb_lb
    name: "autoscalling-lb"
    state: present
    region: "{{ region }}"
    zones:
      - ca-central-1a
      - ca-central-1b
    listeners:
      - protocol: http # options are http, https, ssl, tcp
        load_balancer_port: 80
        instance_port: 80

- name: create launch config
  ec2_lc:
    name: autoscaling-lc
    image_id: "{{ item.image_id }}"
    key_name: "{{ key_name }}"
    region: "{{ region }}"
    security_groups: "{{ security_group }}"
    instance_type: "{{ instance_type }}"
    assign_public_ip: yes
  with_items: "{{ image.results }}"

- ec2_vpc_subnet_facts:
  register: subnet_facts

- ec2_asg:
    name: autoscaling-asg
    launch_config_name: autoscaling-lc
    load_balancers: [ 'autoscalling-lb' ]
    health_check_period: 60
    health_check_type: ELB
    replace_all_instances: yes
    min_size: 2
    max_size: 2
    desired_capacity: 2
    region: "{{ region }}"
    vpc_zone_identifier: [ "{{ subnet_facts.subnets[0].id }}", "{{ subnet_facts.subnets[1].id }}" ]
    tags:
      - environment: production